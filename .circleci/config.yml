# version: 2.1

# orbs:
#     node: circleci/node@5

# jobs:
#     build:
#         docker:
#             - image: reactnativecommunity/react-native-android:latest
#         environment:
#             GRADLE_OPTS: '-Xmx2014m -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+UnlockExperimentalVMOptions -XX:+HeapDumpOnOutOfMemoryError"'
#         working_directory: ~/repo
#         steps:
#             - checkout

#             # Install Node.js and npm
#             - run:
#                   name: Install Node.js and npm
#                   command: |
#                       sudo apt-get update
#                       sudo apt-get install -y nodejs npm

#             # Install Yarn
#             - run:
#                   name: Install Yarn
#                   command: sudo npm install -g yarn

#             - run:
#                   name: Chmod permissions
#                   command: sudo chmod +x ./gradlew
#                   working_directory: android

#             # Download and cache dependencies
#             - restore_cache:
#                   keys:
#                       - v1-dependencies-{{ checksum "package.json" }}
#                       - v1-dependencies-

#             - run:
#                   name: Install dependencies
#                   command: yarn install

#             - save_cache:
#                   paths:
#                       - node_modules
#                   key: v1-dependencies-{{ checksum "package.json" }}

#             # Set up the JDK
#             - run:
#                   name: Set up JDK
#                   command: |
#                       sudo apt-get update

#             # Set up Gradle
#             - restore_cache:
#                   keys:
#                       - v1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}

#             - save_cache:
#                   paths:
#                       - ~/.gradle
#                   key: v1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}

#             # Store the APK as a CircleCI artifact
#             # - store_artifacts:
#             #     path: android/app/build/outputs/apk/release
#             #     destination: apk

#     deploy_firebase:
#         docker:
#             - image: cimg/ruby:3.0.0
#         #   environment:
#         #       # Set JAVA_HOME to the correct path based on the Docker image used
#         #       JAVA_HOME: C:\Program Files\Microsoft\jdk-17.0.10.7-hotspot
#         #   set JAVA_HOME="C:\Program Files\Microsoft\jdk-17.0.10.7-hotspot"
#         working_directory: android
#         steps:
#             - checkout

#             # Debugging step to list the contents of the android directory
#             - run:
#                   name: List android directory contents
#                   command: ls -la android

#             # Debugging step to list the contents of the fastlane directory
#             - run:
#                   name: List fastlane directory contents
#                   command: ls -la android/fastlane

#             - run:
#                   name: Chmod permissions
#                   command: sudo chmod +x ./gradlew
#                   working_directory: android

#             # Install Fastlane
#             - run:
#                   name: Install Fastlane
#                   command: bundle install
#                   working_directory: android

#             # Run Fastlane to deploy to Firebase
#             - run:
#                   name: Deploy to Firebase
#                   command: bundle exec fastlane distribute
#                   working_directory: android

# workflows:
#     version: 2
#     build_and_deploy:
#         jobs:
#             - build
#             - deploy_firebase:
#                   requires:
#                       - build

version: 2.1

orbs:
    node: circleci/node@5
    windows: circleci/windows@1.0.0
    windows-defender: circleci/windows-defender@0.0.2

executors:
    windows:
        machine:
            resource_class: windows.medium
            image: windows-server-2022-gui:edge
            shell: powershell.exe -ExecutionPolicy Bypass

jobs:
    build:
        executor: windows
        environment:
            GRADLE_OPTS: '-Xmx2014m -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+UnlockExperimentalVMOptions -XX:+HeapDumpOnOutOfMemoryError"'
        steps:
            - checkout

            # Install Node.js and npm
            - run:
                  name: Install Node.js and npm
                  command: |
                      choco install nvm
                      nvm install 20.11.0
                      nvm use 20.11.0
                      refreshenv

            # Install Yarn
            - run:
                  name: Install Yarn
                  command: npm install -g yarn

            - run:
                  name: Chmod permissions
                  command: powershell -Command "chmod +x ./gradlew"
                  working_directory: android

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "package.json" }}
                      - v1-dependencies-

            - run:
                  name: Install dependencies
                  command: yarn install

            - save_cache:
                  paths:
                      - node_modules
                  key: v1-dependencies-{{ checksum "package.json" }}

            # Set up the JDK
            # - run:
            #       name: Set up JDK
            #       command: choco install jdk8

            # Set up Gradle
            - restore_cache:
                  keys:
                      - v1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}

            - save_cache:
                  paths:
                      - ~/.gradle
                  key: v1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}

            # Store the APK as a CircleCI artifact
            # - store_artifacts:
            #     path: android/app/build/outputs/apk/release
            #     destination: apk

    deploy_firebase:
        executor: windows
        environment:
            JAVA_HOME: "C:\\Program Files\\Microsoft\\jdk-17.0.10.7-hotspot"
        steps:
            - checkout

            # Install Node.js 20.11.0
            - run:
                  name: Install Node.js 20.11.0
                  command: |
                      choco install nvm
                      nvm install 20.11.0
                      nvm use 20.11.0
                      refreshenv

            # Debugging step to list the contents of the android directory
            - run:
                  name: List android directory contents
                  command: powershell -Command "Get-ChildItem -Force android"

            # Debugging step to list the contents of the fastlane directory
            - run:
                  name: List fastlane directory contents
                  command: powershell -Command "Get-ChildItem -Force android/fastlane"

            - run:
                  name: Chmod permissions
                  command: powershell -Command "chmod +x ./gradlew"
                  working_directory: android

              # Install MSYS2
            - run:
                  name: Install MSYS2
                  command: choco install msys2

              # Run 'ridk install' to set up MSYS2
            - run:
                  name: Run ridk install
                  command: ridk install 1 2 3

            # Install the correct Bundler version
            - run:
                  name: Install Bundler 2.5.14
                  command: gem install bundler -v 2.5.14

            # Install Fastlane
            - run:
                  name: Install Fastlane
                  command: powershell -Command "bundle install"
                  working_directory: android

            # Run Fastlane to deploy to Firebase
            - run:
                  name: Deploy to Firebase
                  command: powershell -Command "bundle exec fastlane distribute"
                  working_directory: android

workflows:
    version: 2
    build_and_deploy:
        jobs:
            - build
            - deploy_firebase:
                  requires:
                      - build
